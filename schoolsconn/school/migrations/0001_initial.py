# Generated by Django 2.1.7 on 2019-03-29 11:14

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SchoolsConnBaseUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('street', models.CharField(blank=True, max_length=20, null=True)),
                ('town', models.CharField(blank=True, max_length=20, null=True)),
                ('lga', models.CharField(blank=True, max_length=20, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(default='Nigeria', max_length=20)),
                ('schools', models.SmallIntegerField(blank=True, default=0, editable=False, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=128, verbose_name='School Email')),
                ('name', models.CharField(max_length=128, verbose_name='School Name')),
                ('phone', models.CharField(max_length=15, verbose_name='School Phone')),
                ('motto', models.CharField(max_length=256)),
                ('website', models.URLField(blank=True, max_length=100, null=True)),
                ('slug', models.SlugField(max_length=128)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('country', models.CharField(default='Nigeria', max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('lga', models.CharField(max_length=50, verbose_name='LGA')),
                ('town', models.CharField(max_length=50)),
                ('street', models.CharField(max_length=640)),
                ('approval_number', models.CharField(default='Awaiting', max_length=11, verbose_name='Govt Approval Number')),
                ('admin', models.CharField(max_length=128, verbose_name='Admission Officer')),
                ('founded', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('m', 'Male Only'), ('f', 'Female Only'), ('mx', 'Mixed')], default='mx', max_length=2)),
                ('boarding', models.CharField(choices=[('fb', 'Full Boarding'), ('fd', 'Day Only'), ('bd', 'Day and Boarding')], default='bd', max_length=2)),
                ('description', models.CharField(max_length=1000)),
                ('creche', models.BooleanField(default=False)),
                ('nursery', models.BooleanField(default=False)),
                ('primary', models.BooleanField(default=False)),
                ('secondary', models.BooleanField(default=False)),
                ('aLevels', models.BooleanField(default=False, verbose_name='A-Levels')),
                ('ncce', models.BooleanField(default=False, verbose_name='National Common Entrance')),
                ('scce', models.BooleanField(default=False, verbose_name='State Common Entrance')),
                ('waec', models.BooleanField(default=False, verbose_name='Senior WAEC Exams')),
                ('neco', models.BooleanField(default=False, verbose_name='Senior NECO Exams')),
                ('jwaec', models.BooleanField(default=False, verbose_name='Junior WAEC Exams')),
                ('jneco', models.BooleanField(default=False, verbose_name='Junior NECO Exams')),
                ('toefl', models.BooleanField(default=False, verbose_name='TOEFL Exams')),
                ('ielts', models.BooleanField(default=False, verbose_name='IELTS Exams')),
                ('alevel', models.BooleanField(default=False, verbose_name='A-Levels Exams')),
                ('igcse', models.BooleanField(default=False, verbose_name='IGCSE Exams')),
                ('carol', models.BooleanField(default=False)),
                ('interhousesports', models.BooleanField(default=False, verbose_name='Inter House Sports')),
                ('culturalday', models.BooleanField(default=False, verbose_name='Cultural Day')),
                ('dance', models.BooleanField(default=False)),
                ('spellingbees', models.BooleanField(default=False, verbose_name='Spelling Bees')),
                ('debate', models.BooleanField(default=False)),
                ('quiz', models.BooleanField(default=False)),
                ('swimming', models.BooleanField(default=False)),
                ('costumeday', models.BooleanField(default=False, verbose_name='Costume Day')),
                ('gguide', models.BooleanField(default=False, verbose_name="Girl's Guide")),
                ('bscout', models.BooleanField(default=False, verbose_name="Boy's Scout")),
                ('frsc', models.BooleanField(default=False, verbose_name='FRSC')),
                ('music', models.BooleanField(default=False)),
                ('drama', models.BooleanField(default=False)),
                ('press', models.BooleanField(default=False)),
                ('jets', models.BooleanField(default=False, verbose_name='JETs')),
                ('karate', models.BooleanField(default=False)),
                ('rcross', models.BooleanField(default=False, verbose_name='Red Cross')),
                ('artscraft', models.BooleanField(default=False, verbose_name='Arts and Craft')),
                ('sickbay', models.BooleanField(default=False)),
                ('multipurposehall', models.BooleanField(default=False, verbose_name='Multipurpose Hall')),
                ('sciencelab', models.BooleanField(default=False, verbose_name='Science Lab')),
                ('busservice', models.BooleanField(default=False, verbose_name='Bus Service')),
                ('library', models.BooleanField(default=False)),
                ('playground', models.BooleanField(default=False)),
                ('sportscomplex', models.BooleanField(default=False, verbose_name='Sports Complex')),
                ('ictcenter', models.BooleanField(default=False, verbose_name='ICT Center')),
                ('artstudio', models.BooleanField(default=False, verbose_name='Art Studio')),
                ('orchard', models.BooleanField(default=False, verbose_name='Orchard')),
                ('farmhouse', models.BooleanField(default=False, verbose_name='Farm House')),
                ('specialneeds', models.BooleanField(default=False, verbose_name='Special Needs Care')),
                ('musicstudio', models.BooleanField(default=False, verbose_name='Music Studio')),
                ('homemanagementlab', models.BooleanField(default=False, verbose_name='Home Management Labs')),
                ('languagestudio', models.BooleanField(default=False, verbose_name='Languages Studio')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
